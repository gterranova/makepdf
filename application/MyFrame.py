# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon Feb 28 03:06:07 2011

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
ID_NEW = wx.NewId()
ID_OPEN  = wx.NewId()
ID_SAVE = wx.NewId()
ID_SAVE_AS = wx.NewId()
ID_CLOSE = wx.NewId()
ID_GENERATE_PDF = wx.NewId()
ID_PROPERTIES = wx.NewId()
ID_QUIT = wx.NewId()

ID_CUT = wx.NewId()
ID_COPY = wx.NewId()
ID_PASTE = wx.NewId()
ID_RENAME = wx.NewId()
ID_DELETE = wx.NewId()
ID_ADD_FILE = wx.NewId()
ID_ADD_FOLDER = wx.NewId()

ID_VIEW_TOOLBAR = wx.NewId()
ID_VIEW_STATUSBAR = wx.NewId()

ID_HELP = wx.NewId()
ID_CHECK_UPDATES = wx.NewId()
ID_ABOUT = wx.NewId()

# end wxGlade

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.mymenubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_NEW, "&New\tCtrl+N", "Create a new project", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_OPEN, "&Open...\tCtrl+O", "Open a project", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(wx.NewId(), "MRU", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendMenu(wx.NewId(), "Open recent", wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.Append(ID_SAVE, "&Save\tCtrl+S", "Save the current project", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_SAVE_AS, "Save &As...\tShift+Ctrl+S", "Save the current project with a differnt name", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_CLOSE, "&Close\tCtrl+W", "Close the current project", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_GENERATE_PDF, "Generate &PDF...\tCtrl+G", "Export the project to PDF", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_PROPERTIES, "Properties...", "Show project properties", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_QUIT, "&Quit\tCtrl+Q", "Quit the program", wx.ITEM_NORMAL)
        self.mymenubar.Append(wxglade_tmp_menu, "&File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_CUT, "Cu&t\tCtrl+X", "Cut the selection", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_COPY, "&Copy\tCtrl+C", "Copy the selection", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_PASTE, "&Paste\tCtrl+V", "Paste the selection", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_RENAME, "&Rename...\tF2", "Rename the selection", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_DELETE, "&Delete\tDel", "Delete the selection from the current project", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_ADD_FILE, "Add a file...", "Add a file to the current project", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_ADD_FOLDER, "Add a folder...", "Add a folder to the current project", wx.ITEM_NORMAL)
        self.mymenubar.Append(wxglade_tmp_menu, "&Edit")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_VIEW_TOOLBAR, "Toolbar", "Show Toolbar", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(ID_VIEW_STATUSBAR, "Statusbar", "Show Statusbar", wx.ITEM_CHECK)
        self.mymenubar.Append(wxglade_tmp_menu, "&View")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_HELP, "Contents\tF1", "Display the Manual", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_CHECK_UPDATES, "Check for updates...", "Check for updates", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_ABOUT, "About", "Information about the program", wx.ITEM_NORMAL)
        self.mymenubar.Append(wxglade_tmp_menu, "&Help")
        self.SetMenuBar(self.mymenubar)
        # Menu Bar end
        self.mystatusbar = self.CreateStatusBar(1, wx.ST_SIZEGRIP)
        
        # Tool Bar
        self.mytoolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_3DBUTTONS)
        self.SetToolBar(self.mytoolbar)
        self.mytoolbar.AddLabelTool(ID_NEW, "New", wx.Bitmap("images/document-new.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Create a new project", "Create a new project")
        self.mytoolbar.AddLabelTool(ID_OPEN, "Open", wx.Bitmap("images/document-open.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Open a project", "Open a project")
        self.mytoolbar.AddLabelTool(ID_SAVE, "Save", wx.Bitmap("images/document-save.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Save the current project", "Save the current project")
        self.mytoolbar.AddSeparator()
        self.mytoolbar.AddLabelTool(ID_ADD_FILE, "Add a file...", wx.Bitmap("images/add-files-to-archive.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Add a file to the current project", "Add a file to the current project")
        self.mytoolbar.AddLabelTool(ID_ADD_FOLDER, "Add a folder...", wx.Bitmap("images/add-folder-to-archive.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Add a folder to the current project", "Add a folder to the current project")
        self.mytoolbar.AddSeparator()
        self.mytoolbar.AddLabelTool(ID_GENERATE_PDF, "Generate PDF...", wx.Bitmap("images/gnome-mime-application-pdf.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Export the project to PDF", "Export the project to PDF")
        # Tool Bar end

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnNew, id=ID_NEW)
        self.Bind(wx.EVT_MENU, self.OnOpen, id=ID_OPEN)
        self.Bind(wx.EVT_MENU, self.OnSave, id=ID_SAVE)
        self.Bind(wx.EVT_MENU, self.OnSaveAs, id=ID_SAVE_AS)
        self.Bind(wx.EVT_MENU, self.OnClose, id=ID_CLOSE)
        self.Bind(wx.EVT_MENU, self.OnGeneratePDF, id=ID_GENERATE_PDF)
        self.Bind(wx.EVT_MENU, self.OnProperties, id=ID_PROPERTIES)
        self.Bind(wx.EVT_MENU, self.OnQuit, id=ID_QUIT)
        self.Bind(wx.EVT_MENU, self.OnCut, id=ID_CUT)
        self.Bind(wx.EVT_MENU, self.OnCopy, id=ID_COPY)
        self.Bind(wx.EVT_MENU, self.OnPaste, id=ID_PASTE)
        self.Bind(wx.EVT_MENU, self.OnRename, id=ID_RENAME)
        self.Bind(wx.EVT_MENU, self.OnDelete, id=ID_DELETE)
        self.Bind(wx.EVT_MENU, self.OnAddFile, id=ID_ADD_FILE)
        self.Bind(wx.EVT_MENU, self.OnAddFolder, id=ID_ADD_FOLDER)
        self.Bind(wx.EVT_MENU, self.OnContents, id=ID_HELP)
        self.Bind(wx.EVT_MENU, self.OnCheckUpdates, id=ID_CHECK_UPDATES)
        self.Bind(wx.EVT_MENU, self.OnAbout, id=ID_ABOUT)
        self.Bind(wx.EVT_TOOL, self.OnNew, id=ID_NEW)
        self.Bind(wx.EVT_TOOL, self.OnOpen, id=ID_OPEN)
        self.Bind(wx.EVT_TOOL, self.OnSave, id=ID_SAVE)
        self.Bind(wx.EVT_TOOL, self.OnAddFile, id=ID_ADD_FILE)
        self.Bind(wx.EVT_TOOL, self.OnAddFolder, id=ID_ADD_FOLDER)
        self.Bind(wx.EVT_TOOL, self.OnGeneratePDF, id=ID_GENERATE_PDF)
        # end wxGlade
## added
        self.Bind(wx.EVT_MENU, self.OnViewStatusbar, id=ID_VIEW_STATUSBAR)        

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("MakePDF")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("app.ico", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((500, 500))
        self.mystatusbar.SetStatusWidths([-1])
        # statusbar fields
        mystatusbar_fields = ["myframe_statusbar"]
        for i in range(len(mystatusbar_fields)):
            self.mystatusbar.SetStatusText(mystatusbar_fields[i], i)
        self.mytoolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        self.Layout()
##        self.Centre()
        self.SetSize((500, 500))
        # end wxGlade

    def OnNew(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnNew' not implemented!"
        event.Skip()

    def OnOpen(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnOpen' not implemented!"
        event.Skip()

    def OnSave(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnSave' not implemented!"
        event.Skip()

    def OnSaveAs(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnSaveAs' not implemented!"
        event.Skip()

    def OnClose(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnClose' not implemented!"
        event.Skip()

    def OnGeneratePDF(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnGeneratePDF' not implemented!"
        event.Skip()

    def OnProperties(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnProperties' not implemented!"
        event.Skip()

    def OnQuit(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnQuit' not implemented!"
        event.Skip()

    def OnCut(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnCut' not implemented!"
        event.Skip()

    def OnCopy(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnCopy' not implemented!"
        event.Skip()

    def OnPaste(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnPaste' not implemented!"
        event.Skip()

    def OnRename(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnRename' not implemented!"
        event.Skip()

    def OnDelete(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnDelete' not implemented!"
        event.Skip()

    def OnAddFile(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnAddFile' not implemented!"
        event.Skip()

    def OnAddFolder(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnAddFolder' not implemented!"
        event.Skip()

    def OnViewStatusbar(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnViewStatusbar' not implemented!"
        event.Skip()

    def OnContents(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnContents' not implemented!"
        event.Skip()

    def OnCheckUpdates(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnCheckUpdates' not implemented!"
        event.Skip()

    def OnAbout(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnAbout' not implemented!"
        event.Skip()

# end of class MyFrame


